# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-QWos-bqSCXwnOkdiGVlXGhPGm5DgXbV
"""
#
# Install streamlit library

# Then import the library as usual in the script.
import streamlit as st
from Bio import Entrez, SeqIO


# Secuencias de aminoácidos de las proteínas
proteins = {
    "Insulina": (
        "MALWMRLLPLLALLALWGPDPAAA"
        "FGPGGPLALTLSSSINQEGASQSTSQP"
        "LNSRWQRPVEEQELLPCEDPQVP"
    ),
    "Glucagón": "MKSIYFVAGLFVMLVQGSWQRSLQDTEEKSRSFSASQADPLSDPDQMNEDKRHSQGTFTSDYSKYLDSRRAQDFVQWLMNTKRNRNNIAKRHDEFERHAEGTFTSDVSSYLEGQAAKEFIAWLVKGRGRRDFPEEVAIVEELGRRHADGSFSDEMNTILDNLAARDFINWLIQTKITDRK",
    "Hemoglobina (subunidad beta)": (
        "MTQTPYEVIGQERLYQLIDHFYSLVEQDNRINHLFPGDFAETARKQKQFLTQFLGGPDLYTQEHGHPMLRMRHLPFPIDDKAKEAWLENMHTAITHAQLPHGAGDYLYERLRLTANHMVNIEN"
    ),
    "Colágeno (fragmento)": (
        "MHPGLWLLLVTLCLTEELAAAGEKSYGKPCGGQDCSGSCQCFPEKGARGRPGPIGIQGPTGPQGFTGSTGLSGLKGERGFPGLLGPYGPKGDKGPMGVPGFLGINGIPGHPGQPGPRGPPGLDGCNGTQGAVGFPGPDGYPGLLGPPGLPGQKGSKGDPVLAPGSFKGMKGDPGLPGLDGITGPQGAPGFPGAVGPAGPPGLQGPPGPPGPLGPDGNMGLGFQGEKGVKGDVGLPGPAGPPPSTGELEFMGFPKGKKGSKGEPGPKGFPGISGPPGFPGLGTTGEKGEKGEKGIPGLPGPRGPMGSEGVQGPPGQQGKKGTLGFPGLNGFQGIEGQKGDIGLPGPDVFIDIDGAVISGNPGDPGVPGLPGLKGDEGIQGLRGPSGVPGLPALSGVPGALGPQGFPGLKGDQGNPGRTTIGAAGLPGRDGLPGPPGPPGPPSPEFETETLHNKESGFPGLRGEQGPKGNLGLKGIKGDSGFCACDGGVPNTGPPGEPGPPGPWGLIGLPGLKGARGDRGSGGAQGPAGAPGLVGPLGPSGPKGKKGEPILSTIQGMPGDRGDSGSQGFRGVIGEPGKDGVPGLPGLPGLPGDGGQGFPGEKGLPGLPGEKGHPGPPGLPGNGLPGLPGPRGLPGDKGKDGLPGQQGLPGSKGITLPCIIPGSYGPSGFPGTPGFPGPKGSRGLPGTPGQPGSSGSKGEPGSPGLVHLPELPGFPGPRGEKGLPGFPGLPGKDGLPGMIGSPGLPGSKGATGDIFGAENGAPGEQGLQGLTGHKGFLGDSGLPGLKGVHGKPGLLGPKGERGSPGTPGQVGQPGTPGSSGPYGIKGKSGLPGAPGFPGISGHPGKKGTRGKKGPPGSIVKKGLPGLKGLPGNPGLVGLKGSPGSPGVAGLPALSGPKGEKGSVGFVGFPGIPGLPGISGTRGLKGIPGSTGKMGPSGRAGTPGEKGDRGNPGPVGIPSPRRPMSNLWLKGDKGSQGSAGSNGFPGPRGDKGEAGRPGPPGLPGAPGLPGIIKGVSGKPGPPGFMGIRGLPGLKGSSGITGFPGMPGESGSQGIRGSPGLPGASGLPGLKGDNGQTVEISGSPGPKGQPGESGFKGTKGRDGLIGNIGFPGNKGEDGKVGVSGDVGLPGAPGFPGVAGMRGEPGLPGSSGHQGAIGPLGSPGLIGPKGFPGFPGLHGLNGLPGTKGTHGTPGPSITGVPGPAGLPGPKGEKGYPGIGIGAPGKPGLRGQKGDRGFPGLQGPAGLPGAPGISLPSLIAGQPGDPGRPGLDGERGRPGPAGPPGPPGPSSNQGDTGDPGFPGIPGFSGLPGELGLKGMRGEPGFMGTPGKVGPPGDPGFPGMKGKAGARGSSGLQGDPGQTPTAEAVQVPPGPLGLPGIDGIPGLTGDPGAQGPVGLQGSKGLPGIPGKDGPSGLPGPPGALGDPGLPGLQGPPGFEGAPGQQGPFGMPGMPGQSMRVGYTLVKHSQSEQVPPCPIGMSQLWVGYSLLFVEGQEKAHNQDLGFAGSCLPRFSTMPFIYCNINEVCHYARRNDKSYWLSTTAPIPMMPVSQTQIPQYISRCSVCEAPSQAIAVHSQDITIPQCPLGWRSLWIGYSFLMHTAAGAEGGGQSLVSPGSCLEDFRATPFIECSGARGTCHYFANKYSFWLTTVEERQQFGELPVSETLKAGQLHTRVSRCQVCMKSL"
    ),
}

# Título de la aplicación
st.title("Secuencias de Aminoácidos de Proteínas")

# Descripción


# Selector de proteínas
selected_protein = st.selectbox("Selecciona una proteína:", list(proteins.keys()))

# Mostrar la secuencia de aminoácidos
if selected_protein:
    st.subheader(f"Secuencia de {selected_protein}:")
    sequence = proteins[selected_protein]
    st.code(sequence, language="plain")
    
    # Opcional: mostrar longitud de la secuencia
    st.write(f"**Longitud de la secuencia:** {len(sequence)} aminoácidos")

    # Botón para copiar la secuencia
    st.download_button(
        label="Descargar Secuencia",
        data=sequence,
        file_name=f"{selected_protein}_secuencia.txt",
        mime="text/plain",
    )
else:
    st.info("Por favor, selecciona una proteína para ver la secuencia.")
        
#PROPORCION DE  ATOMOS

import matplotlib.pyplot as plt

# Datos de la proporción de átomos de las proteínas
proteins = {
    "Insulina": {"C": 258, "H": 384, "O": 114, "N": 64, "S": 6},
    "Glucagón": {"C": 153, "H": 225, "O": 49, "N": 40, "S": 2},
    "Hemoglobina": {"C": 2954, "H": 4664, "O": 832, "N": 780, "S": 8},
    "Colágeno": {"C": 1590, "H": 2515, "O": 435, "N": 380, "S": 6},
}

# Función para graficar
def plot_atom_proportion(protein_name, atom_counts):
    atoms = list(atom_counts.keys())
    counts = list(atom_counts.values())
    
    fig, ax = plt.subplots()
    ax.pie(counts, labels=atoms, autopct='%1.1f%%', startangle=90, colors=plt.cm.tab20.colors)
    ax.set_title(f"Proporción de átomos en {protein_name}")
    return fig

# Título
st.title("Proporción de átomos en proteínas")

# Descripción
st.write("Este programa muestra la proporción de átomos en diferentes proteínas. Selecciona una proteína para ver su gráfica.")

# Selección de proteína
selected_protein = st.selectbox("Selecciona una proteína:", list(proteins.keys()))

# Obtener datos de la proteína seleccionada
atom_data = proteins[selected_protein]

# Mostrar los datos en una tabla
st.subheader(f"Datos de {selected_protein}")
st.write(atom_data)

# Generar la gráfica
fig = plot_atom_proportion(selected_protein, atom_data)

# Mostrar la gráfica
st.pyplot(fig)


#FACTOR B

import matplotlib.pyplot as plt
from Bio import PDB
import streamlit as st

# Función para obtener B-factors de una proteína
def obtener_bfactor(proteina_pdb):
    # Cargar la estructura desde el archivo PDB
    parser = PDB.PDBParser()
    structure = parser.get_structure("protein", proteina_pdb)

    b_factors = []

    # Iterar sobre todos los átomos en la estructura para obtener sus B-factors
    for model in structure:
        for chain in model:
            for residue in chain:
                for atom in residue:
                    b_factors.append(atom.get_bfactor())

    return b_factors

# Crear un gráfico de líneas del B-factor
def graficar_bfactor(b_factors, proteina_nombre):
    plt.figure(figsize=(10, 6))
    plt.plot(b_factors, marker='o', linestyle='-', color='b')
    plt.title(f'B-factor de {proteina_nombre}')
    plt.xlabel('Átomo')
    plt.ylabel('B-factor')
    plt.grid(True)
    plt.show()

# Proteínas en formato PDB (deberás tener estos archivos en tu directorio o en una URL accesible)
proteinas = {
    'Insulina': '1ZEI.pdb',
    'Glucagon': '7LCK.pdb',
    'Hemoglobina': '1SHR.pdb',
    'Colágeno': '5NBI.pdb'
}

# Interfaz interactiva con Streamlit
st.title('Cálculo y Gráfica de B-factor de Proteínas')
proteina_seleccionada = st.selectbox('Selecciona una proteína:', list(proteinas.keys()))

# Cargar el archivo correspondiente a la proteína seleccionada
proteina_pdb = proteinas[proteina_seleccionada]

# Procesar el B-factor y generar la gráfica
if st.button('Generar Gráfica'):
    b_factors = obtener_bfactor(proteina_pdb)
    graficar_bfactor(b_factors, proteina_seleccionada)
