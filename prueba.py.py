# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-QWos-bqSCXwnOkdiGVlXGhPGm5DgXbV
"""
#
# Install streamlit library

# Then import the library as usual in the script.
import streamlit as st
from Bio import Entrez, SeqIO


# Secuencias de aminoácidos de las proteínas
proteins = {
    "Insulina": (
        "MALWMRLLPLLALLALWGPDPAAA"
        "FGPGGPLALTLSSSINQEGASQSTSQP"
        "LNSRWQRPVEEQELLPCEDPQVP"
    ),
    "Glucagón": "MKSIYFVAGLFVMLVQGSWQRSLQDTEEKSRSFSASQADPLSDPDQMNEDKRHSQGTFTSDYSKYLDSRRAQDFVQWLMNTKRNRNNIAKRHDEFERHAEGTFTSDVSSYLEGQAAKEFIAWLVKGRGRRDFPEEVAIVEELGRRHADGSFSDEMNTILDNLAARDFINWLIQTKITDRK",
    "Hemoglobina": (
        "MTQTPYEVIGQERLYQLIDHFYSLVEQDNRINHLFPGDFAETARKQKQFLTQFLGGPDLYTQEHGHPMLRMRHLPFPIDDKAKEAWLENMHTAITHAQLPHGAGDYLYERLRLTANHMVNIEN"
    ),
    "Colágeno": (
        "MHPGLWLLLVTLCLTEELAAAGEKSYGKPCGGQDCSGSCQCFPEKGARGRPGPIGIQGPTGPQGFTGSTGLSGLKGERGFPGLLGPYGPKGDKGPMGVPGFLGINGIPGHPGQPGPRGPPGLDGCNGTQGAVGFPGPDGYPGLLGPPGLPGQKGSKGDPVLAPGSFKGMKGDPGLPGLDGITGPQGAPGFPGAVGPAGPPGLQGPPGPPGPLGPDGNMGLGFQGEKGVKGDVGLPGPAGPPPSTGELEFMGFPKGKKGSKGEPGPKGFPGISGPPGFPGLGTTGEKGEKGEKGIPGLPGPRGPMGSEGVQGPPGQQGKKGTLGFPGLNGFQGIEGQKGDIGLPGPDVFIDIDGAVISGNPGDPGVPGLPGLKGDEGIQGLRGPSGVPGLPALSGVPGALGPQGFPGLKGDQGNPGRTTIGAAGLPGRDGLPGPPGPPGPPSPEFETETLHNKESGFPGLRGEQGPKGNLGLKGIKGDSGFCACDGGVPNTGPPGEPGPPGPWGLIGLPGLKGARGDRGSGGAQGPAGAPGLVGPLGPSGPKGKKGEPILSTIQGMPGDRGDSGSQGFRGVIGEPGKDGVPGLPGLPGLPGDGGQGFPGEKGLPGLPGEKGHPGPPGLPGNGLPGLPGPRGLPGDKGKDGLPGQQGLPGSKGITLPCIIPGSYGPSGFPGTPGFPGPKGSRGLPGTPGQPGSSGSKGEPGSPGLVHLPELPGFPGPRGEKGLPGFPGLPGKDGLPGMIGSPGLPGSKGATGDIFGAENGAPGEQGLQGLTGHKGFLGDSGLPGLKGVHGKPGLLGPKGERGSPGTPGQVGQPGTPGSSGPYGIKGKSGLPGAPGFPGISGHPGKKGTRGKKGPPGSIVKKGLPGLKGLPGNPGLVGLKGSPGSPGVAGLPALSGPKGEKGSVGFVGFPGIPGLPGISGTRGLKGIPGSTGKMGPSGRAGTPGEKGDRGNPGPVGIPSPRRPMSNLWLKGDKGSQGSAGSNGFPGPRGDKGEAGRPGPPGLPGAPGLPGIIKGVSGKPGPPGFMGIRGLPGLKGSSGITGFPGMPGESGSQGIRGSPGLPGASGLPGLKGDNGQTVEISGSPGPKGQPGESGFKGTKGRDGLIGNIGFPGNKGEDGKVGVSGDVGLPGAPGFPGVAGMRGEPGLPGSSGHQGAIGPLGSPGLIGPKGFPGFPGLHGLNGLPGTKGTHGTPGPSITGVPGPAGLPGPKGEKGYPGIGIGAPGKPGLRGQKGDRGFPGLQGPAGLPGAPGISLPSLIAGQPGDPGRPGLDGERGRPGPAGPPGPPGPSSNQGDTGDPGFPGIPGFSGLPGELGLKGMRGEPGFMGTPGKVGPPGDPGFPGMKGKAGARGSSGLQGDPGQTPTAEAVQVPPGPLGLPGIDGIPGLTGDPGAQGPVGLQGSKGLPGIPGKDGPSGLPGPPGALGDPGLPGLQGPPGFEGAPGQQGPFGMPGMPGQSMRVGYTLVKHSQSEQVPPCPIGMSQLWVGYSLLFVEGQEKAHNQDLGFAGSCLPRFSTMPFIYCNINEVCHYARRNDKSYWLSTTAPIPMMPVSQTQIPQYISRCSVCEAPSQAIAVHSQDITIPQCPLGWRSLWIGYSFLMHTAAGAEGGGQSLVSPGSCLEDFRATPFIECSGARGTCHYFANKYSFWLTTVEERQQFGELPVSETLKAGQLHTRVSRCQVCMKSL"
    ),
}

# Título de la aplicación
st.title("Secuencias de Aminoácidos de Proteínas")



# Selector de proteínas
selected_protein = st.selectbox("Selecciona una proteína:", list(proteins.keys()))

# Mostrar la secuencia de aminoácidos
if selected_protein:
    st.subheader(f"Secuencia de {selected_protein}:")
    sequence = proteins[selected_protein]
    st.code(sequence, language="plain")

    # Opcional: mostrar longitud de la secuencia
    st.write(f"**Longitud de la secuencia:** {len(sequence)} aminoácidos")

    # Botón para copiar la secuencia
    st.download_button(
        label="Descargar Secuencia",
        data=sequence,
        file_name=f"{selected_protein}_secuencia.txt",
        mime="text/plain",
    )
else:
    st.info("Selecciona una proteína para ver la secuencia.")

#PROPORCION DE  Aminoacidos
import streamlit as st
import matplotlib.pyplot as plt
from collections import Counter

# Función para calcular la proporción de átomos
def calcular_proporcion(proteina):
    # Definir las proteínas y sus secuencias
    proteinas = {
        "Insulina": "MALWMRLLPLLALLALWGPDPAAAFGPGGPLALTLSSSINQEGASQSTSQPLNSRWQRPVEEQELLPCEDPQVP",  # Reemplaza con la secuencia real de insulina
        "Glucagon": "MKSIYFVAGLFVMLVQGSWQRSLQDTEEKSRSFSASQADPLSDPDQMNEDKRHSQGTFTSDYSKYLDSRRAQDFVQWLMNTKRNRNNIAKRHDEFERHAEGTFTSDVSSYLEGQAAKEFIAWLVKGRGRRDFPEEVAIVEELGRRHADGSFSDEMNTILDNLAARDFINWLIQTKITDRK",  # Reemplaza con la secuencia real de glucagón
        "Hemoglobina": "MTQTPYEVIGQERLYQLIDHFYSLVEQDNRINHLFPGDFAETARKQKQFLTQFLGGPDLYTQEHGHPMLRMRHLPFPIDDKAKEAWLENMHTAITHAQLPHGAGDYLYERLRLTANHMVNIEN",  # Reemplaza con la secuencia real de hemoglobina
        "Colageno": "MHPGLWLLLVTLCLTEELAAAGEKSYGKPCGGQDCSGSCQCFPEKGARGRPGPIGIQGPTGPQGFTGSTGLSGLKGERGFPGLLGPYGPKGDKGPMGVPGFLGINGIPGHPGQPGPRGPPGLDGCNGTQGAVGFPGPDGYPGLLGPPGLPGQKGSKGDPVLAPGSFKGMKGDPGLPGLDGITGPQGAPGFPGAVGPAGPPGLQGPPGPPGPLGPDGNMGLGFQGEKGVKGDVGLPGPAGPPPSTGELEFMGFPKGKKGSKGEPGPKGFPGISGPPGFPGLGTTGEKGEKGEKGIPGLPGPRGPMGSEGVQGPPGQQGKKGTLGFPGLNGFQGIEGQKGDIGLPGPDVFIDIDGAVISGNPGDPGVPGLPGLKGDEGIQGLRGPSGVPGLPALSGVPGALGPQGFPGLKGDQGNPGRTTIGAAGLPGRDGLPGPPGPPGPPSPEFETETLHNKESGFPGLRGEQGPKGNLGLKGIKGDSGFCACDGGVPNTGPPGEPGPPGPWGLIGLPGLKGARGDRGSGGAQGPAGAPGLVGPLGPSGPKGKKGEPILSTIQGMPGDRGDSGSQGFRGVIGEPGKDGVPGLPGLPGLPGDGGQGFPGEKGLPGLPGEKGHPGPPGLPGNGLPGLPGPRGLPGDKGKDGLPGQQGLPGSKGITLPCIIPGSYGPSGFPGTPGFPGPKGSRGLPGTPGQPGSSGSKGEPGSPGLVHLPELPGFPGPRGEKGLPGFPGLPGKDGLPGMIGSPGLPGSKGATGDIFGAENGAPGEQGLQGLTGHKGFLGDSGLPGLKGVHGKPGLLGPKGERGSPGTPGQVGQPGTPGSSGPYGIKGKSGLPGAPGFPGISGHPGKKGTRGKKGPPGSIVKKGLPGLKGLPGNPGLVGLKGSPGSPGVAGLPALSGPKGEKGSVGFVGFPGIPGLPGISGTRGLKGIPGSTGKMGPSGRAGTPGEKGDRGNPGPVGIPSPRRPMSNLWLKGDKGSQGSAGSNGFPGPRGDKGEAGRPGPPGLPGAPGLPGIIKGVSGKPGPPGFMGIRGLPGLKGSSGITGFPGMPGESGSQGIRGSPGLPGASGLPGLKGDNGQTVEISGSPGPKGQPGESGFKGTKGRDGLIGNIGFPGNKGEDGKVGVSGDVGLPGAPGFPGVAGMRGEPGLPGSSGHQGAIGPLGSPGLIGPKGFPGFPGLHGLNGLPGTKGTHGTPGPSITGVPGPAGLPGPKGEKGYPGIGIGAPGKPGLRGQKGDRGFPGLQGPAGLPGAPGISLPSLIAGQPGDPGRPGLDGERGRPGPAGPPGPPGPSSNQGDTGDPGFPGIPGFSGLPGELGLKGMRGEPGFMGTPGKVGPPGDPGFPGMKGKAGARGSSGLQGDPGQTPTAEAVQVPPGPLGLPGIDGIPGLTGDPGAQGPVGLQGSKGLPGIPGKDGPSGLPGPPGALGDPGLPGLQGPPGFEGAPGQQGPFGMPGMPGQSMRVGYTLVKHSQSEQVPPCPIGMSQLWVGYSLLFVEGQEKAHNQDLGFAGSCLPRFSTMPFIYCNINEVCHYARRNDKSYWLSTTAPIPMMPVSQTQIPQYISRCSVCEAPSQAIAVHSQDITIPQCPLGWRSLWIGYSFLMHTAAGAEGGGQSLVSPGSCLEDFRATPFIECSGARGTCHYFANKYSFWLTTVEERQQFGELPVSETLKAGQLHTRVSRCQVCMKSL",  # Reemplaza con la secuencia real de colágeno
    }

    # Obtener la secuencia de la proteína seleccionada
    secuencia = proteinas.get(proteina)
    
    if secuencia is None:
        return None

    # Contar los átomos (aminoácidos) presentes en la secuencia
    aa_count = Counter(secuencia)
    
    return aa_count

# Interfaz Streamlit
st.title("Proporción de Aminoacidos en Proteínas")

# Opción para seleccionar la proteína
proteina = st.selectbox("Selecciona una proteína", ["Insulina", "Glucagon", "Hemoglobina", "Colageno"])

# Calcular la proporción de átomos
aa_count = calcular_proporcion(proteina)

if aa_count:
    # Convertir a listas para graficar
    aminoacidos = list(aa_count.keys())
    cantidades = list(aa_count.values())

    # Graficar la proporción de átomos
    plt.figure(figsize=(10, 6))
    plt.bar(aminoacidos, cantidades, color='skyblue')
    plt.xlabel("Aminoácidos")
    plt.ylabel("Cantidad")
    plt.title(f"Proporción de Aminoacidos en la Proteína: {proteina}")
    plt.xticks(rotation=45)
    st.pyplot(plt)
else:
    st.write("No se encontró la secuencia para la proteína seleccionada.")

#ESTRUCTURA 3D

import streamlit as st
import py3Dmol

# Datos de proteínas en formato PDB (puedes agregar más según sea necesario)
proteins_data = {
    "Insulina": """
HEADER    INSULIN
ATOM      1  N   ASN A   1      14.456  20.331   5.482  1.00 40.00           N  
ATOM      2  CA  ASN A   1      15.913  20.276   5.389  1.00 40.00           C  
ATOM      3  C   ASN A   1      16.421  21.708   5.492  1.00 40.00           C  
TER
END
""",
    "Glucagón": """
HEADER    GLUCAGON
ATOM      1  N   HIS A   1      12.456  19.331   4.482  1.00 50.00           N  
ATOM      2  CA  HIS A   1      13.913  19.276   4.389  1.00 50.00           C  
ATOM      3  C   HIS A   1      14.421  20.708   4.492  1.00 50.00           C  
TER
END
""",
    "Hemoglobina": """
HEADER    HEMOGLOBIN
ATOM      1  N   GLY A   1      10.456  18.331   3.482  1.00 60.00           N  
ATOM      2  CA  GLY A   1      11.913  18.276   3.389  1.00 60.00           C  
ATOM      3  C   GLY A   1      12.421  19.708   3.492  1.00 60.00           C  
TER
END
""",
    "Colágeno": """
HEADER    COLLAGEN
ATOM      1  N   PRO A   1       9.456  17.331   2.482  1.00 70.00           N  
ATOM      2  CA  PRO A   1      10.913  17.276   2.389  1.00 70.00           C  
ATOM      3  C   PRO A   1      11.421  18.708   2.492  1.00 70.00           C  
TER
END
"""
}

# Función para renderizar la proteína seleccionada
def render_protein_from_data(pdb_data):
    try:
        # Crear el visualizador 3D con py3Dmol
        view = py3Dmol.view(width=800, height=400)
        view.addModel(pdb_data, "pdb")  # Cargar el modelo en formato PDB
        view.setStyle({"cartoon": {"color": "spectrum"}})  # Estilo del modelo
        view.zoomTo()  # Ajustar zoom
        return view.render()  # Devolver el HTML generado
    except Exception as e:
        st.error(f"Error al renderizar la proteína: {e}")
        return None

# Configuración del dashboard
st.title("Visualización 3D de Proteínas")

# Sidebar para seleccionar proteínas
protein_option = st.sidebar.selectbox(
    "Selecciona una proteína:",
    list(proteins_data.keys()),
    key="protein_selector"  # Clave única para evitar errores
)

# Renderizar la estructura 3D
if protein_option:
    pdb_data = proteins_data[protein_option]  # Obtener los datos PDB de la proteína seleccionada
    protein_html = render_protein_from_data(pdb_data)
    if protein_html:  # Verificar que se generó el HTML
        st.components.v1.html(protein_html, height=500)  # Mostrar el modelo
    else:
        st.warning("No se pudo renderizar la proteína seleccionada.")
